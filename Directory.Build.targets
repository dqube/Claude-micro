<Project>

  <!-- Define project reference paths -->
  <PropertyGroup>
    <DomainProject>$(MSBuildThisFileDirectory)BuildingBlocks.Domain\BuildingBlocks.Domain.csproj</DomainProject>
    <ApplicationProject>$(MSBuildThisFileDirectory)BuildingBlocks.Application\BuildingBlocks.Application.csproj</ApplicationProject>
    <InfrastructureProject>$(MSBuildThisFileDirectory)BuildingBlocks.Infrastructure\BuildingBlocks.Infrastructure.csproj</InfrastructureProject>
    <APIProject>$(MSBuildThisFileDirectory)BuildingBlocks.API\BuildingBlocks.API.csproj</APIProject>
  </PropertyGroup>
  <PropertyGroup Condition="$(MSBuildProjectFullPath.Contains('BuildingBlocks')) and $(MSBuildProjectName.EndsWith('API'))">
    <PackageId>BuildingBlocks.API</PackageId>
    <Description>API layer building blocks for .NET applications following Clean Architecture principles</Description>
    <PackageTags>api;web;aspnetcore;clean-architecture;building-blocks</PackageTags>
  </PropertyGroup>
  <PropertyGroup Condition="$(MSBuildProjectFullPath.Contains('BuildingBlocks')) and $(MSBuildProjectName.EndsWith('Application'))">
    <PackageId>BuildingBlocks.Application</PackageId>
    <Description>Application layer building blocks for .NET applications following Clean Architecture principles</Description>
    <PackageTags>api;web;aspnetcore;clean-architecture;building-blocks</PackageTags>
  </PropertyGroup>
  <PropertyGroup Condition="$(MSBuildProjectFullPath.Contains('BuildingBlocks')) and $(MSBuildProjectName.EndsWith('Domain'))">
    <PackageId>BuildingBlocks.Domain</PackageId>
    <Description>Domain layer building blocks for .NET applications following Clean Architecture principles</Description>
    <PackageTags>api;web;aspnetcore;clean-architecture;building-blocks</PackageTags>
  </PropertyGroup>
  <PropertyGroup Condition="$(MSBuildProjectFullPath.Contains('BuildingBlocks')) and $(MSBuildProjectName.EndsWith('Infrastructure'))">
    <PackageId>BuildingBlocks.Infrastructure</PackageId>
    <Description>Infrastructure layer building blocks for .NET applications following Clean Architecture principles</Description>
    <PackageTags>api;web;aspnetcore;clean-architecture;building-blocks</PackageTags>
  </PropertyGroup>
  <!-- Domain layer - no dependencies on other layers -->
  <ItemGroup Condition="$(MSBuildProjectFullPath.Contains('BuildingBlocks')) and $(MSBuildProjectName.EndsWith('Domain'))">
    <!-- Domain has no project dependencies -->
  </ItemGroup>
  
  <!-- Application layer - depends on Domain -->
  <ItemGroup Condition="$(MSBuildProjectFullPath.Contains('BuildingBlocks')) and $(MSBuildProjectName.EndsWith('Application'))">
    <ProjectReference Include="$(DomainProject)" />
  </ItemGroup>
  <!-- Infrastructure layer - depends on Application only (gets Domain through Application) -->
   <ItemGroup Condition="$(MSBuildProjectFullPath.Contains('BuildingBlocks')) and $(MSBuildProjectName.EndsWith('Infrastructure'))">
    <ProjectReference Include="$(ApplicationProject)" />
  </ItemGroup>
  <!-- API layer - depends on Infrastructure only (gets Domain and Application through Infrastructure) -->
  <ItemGroup Condition="$(MSBuildProjectFullPath.Contains('BuildingBlocks')) and $(MSBuildProjectName.EndsWith('API'))">
    <ProjectReference Include="$(InfrastructureProject)" />
  </ItemGroup>
  <ItemGroup Condition="$(MSBuildProjectFullPath.Contains('Services')) and $(MSBuildProjectName.EndsWith('API'))">
    <ProjectReference Include="$(APIProject)" />
    <ProjectReference Include="..\Infrastructure\*.csproj" />
  </ItemGroup>
  <ItemGroup Condition="$(MSBuildProjectFullPath.Contains('Services')) and $(MSBuildProjectName.EndsWith('Application'))">
    <ProjectReference Include="$(ApplicationProject)" />
    <ProjectReference Include="..\Domain\*.csproj" />
  </ItemGroup>
  <ItemGroup Condition="$(MSBuildProjectFullPath.Contains('Services')) and $(MSBuildProjectName.EndsWith('Domain'))">
    <ProjectReference Include="$(DomainProject)" />
  </ItemGroup>
 
  <ItemGroup Condition="$(MSBuildProjectFullPath.Contains('Services')) and $(MSBuildProjectName.EndsWith('Infrastructure'))">
    <ProjectReference Include="$(InfrastructureProject)" />
    <ProjectReference Include="..\Application\*.csproj" />
  </ItemGroup>
  <!-- Common framework references -->
  <ItemGroup Condition="'$(MSBuildProjectName)' == 'BuildingBlocks.Infrastructure' OR '$(MSBuildProjectName)' == 'BuildingBlocks.API'">
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <!-- Domain layer specific package references -->
  <ItemGroup Condition="'$(MSBuildProjectName)' == 'BuildingBlocks.Domain'">
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" />
    <PackageReference Include="System.Text.Json" />
  </ItemGroup>

  <!-- Application layer specific package references -->
  <ItemGroup Condition="'$(MSBuildProjectName)' == 'BuildingBlocks.Application'">
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" />
    <PackageReference Include="Microsoft.Extensions.Caching.StackExchangeRedis" />
    <PackageReference Include="Microsoft.Extensions.Hosting.Abstractions" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" />
    <PackageReference Include="Scrutor" />
  </ItemGroup>

  <!-- Infrastructure layer specific package references -->
  <ItemGroup Condition="'$(MSBuildProjectName)' == 'BuildingBlocks.Infrastructure'">
    <PackageReference Include="Microsoft.EntityFrameworkCore" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" />
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" />
    <PackageReference Include="Microsoft.Extensions.Caching.StackExchangeRedis" />
    <PackageReference Include="StackExchange.Redis" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" />
    <PackageReference Include="FluentValidation" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks" />
  </ItemGroup>

  <!-- API layer specific package references -->
  <ItemGroup Condition="'$(MSBuildProjectName)' == 'BuildingBlocks.API'">
    <PackageReference Include="FluentValidation" />
    <PackageReference Include="FluentValidation.DependencyInjectionExtensions" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" />
    <PackageReference Include="Scalar.AspNetCore" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" />
    <PackageReference Include="Asp.Versioning.Http" />
    <PackageReference Include="Asp.Versioning.Mvc.ApiExplorer" />
    <PackageReference Include="Serilog.AspNetCore" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks" />
    <PackageReference Include="Microsoft.AspNetCore.ResponseCompression" />
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Core" />
    <PackageReference Include="Microsoft.AspNetCore.Authorization" />
  </ItemGroup>

</Project>